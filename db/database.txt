create database bones;
\c bones

create table usuario(id_usuario serial primary key,
                nombre_usuario varchar(24) not null,
                ap_pat_usuario varchar(32),
                ap_mat_usuario varchar(32),
                correo varchar(64) unique not null,
                contrasena varchar(32) not null,
                no_telefono bigint);

create table cliente(id_cliente serial primary key,
                id_usuario int, foreign key(id_usuario) references usuario(id_usuario) on update cascade on delete cascade,
                preferencias varchar(256));

create table supervisor(id_supervisor serial primary key,
                id_usuario int, foreign key(id_usuario) references usuario(id_usuario) on update cascade on delete cascade);

create table museo(id_museo serial primary key,
                nombre varchar(128) unique not null,
                categoria varchar(256) not null,
                sinopsis varchar(300) not null,
                estado varchar(64) not null,
                colonia varchar(128) not null,
                calle varchar(128) not null,
                detalles varchar(128),
                map_url varchar(256),
                address_url varchar(256),
                about varchar(2048) not null,
                puntuacion float check(puntuacion >= 0 and puntuacion <= 5) default 0,
                visitas int default 0,
                img bytea, 
                img_name varchar(64));

create table proveedor(id_supervisor serial primary key,
                id_usuario int, foreign key(id_usuario) references usuario(id_usuario) on update cascade on delete cascade,
                id_museo int, foreign key(id_museo) references museo(id_museo) on update cascade on delete cascade);

create table boleto(id_boleto serial primary key,
                id_cliente int, foreign key(id_cliente) references cliente(id_cliente) on update cascade on delete cascade,
                fecha_compra date,
                fecha_vencimiento date,
                descripcion varchar(512));

create table comentario(id_comentario serial primary key,
                id_comentario_responde int, foreign key(id_comentario_responde) references comentario(id_comentario),
                id_usuario int, foreign key(id_usuario) references usuario(id_usuario) on update cascade on delete cascade,
                id_supervisor int, foreign key(id_supervisor) references supervisor(id_supervisor) on update cascade on delete cascade,
                texto varchar(512) not null);

create table pago(id_pago serial primary key,
                cantidad float not null,
                fecha_pago date not null);

create table paypal(id_paypal int,
                primary key(id_paypal), foreign key(id_paypal) references pago(id_pago));

create table tarjeta(id_tarjeta int,
                primary key(id_tarjeta), foreign key(id_tarjeta) references pago(id_pago) on update cascade on delete cascade);

create table valoracion(id_valoracion serial primary key,
                id_cliente int, foreign key(id_cliente) references cliente(id_cliente) on update cascade on delete cascade,
                estrellas int check(estrellas >= 1 and estrellas <= 5) not null,
                opinion varchar(256) not null);

create view res_museo as select id_museo, nombre, puntuacion, visitas, img_name from museo;
create view res_usuario as select id_usuario, nombre_usuario, correo from usuario;
insert into usuario(nombre_usuario, correo, contrasena) values('Admin', 'admin@email.com', 'admin.1234');